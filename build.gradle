plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.comprehensive.eureka'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // QueryDSL 관련 의존성 (Q 클래스 생성)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'


}

// clean 시 Q 클래스 디렉토리 삭제
clean {
    delete file('build/generated/sources/annotationProcessor/java/main')
}

tasks.named('bootJar') {
    mainClass.set('com/gram/eureka/eureka_gram_user/EurekaGramUserApplication.java') // Main 클래스 경로 설정
}

tasks.named('compileJava') {
    // 컴파일 시 옵션 추가
    options.compilerArgs += ['-parameters'] // 메서드 파라미터 이름 유지
    options.annotationProcessorPath = configurations.annotationProcessor // Annotation Processor 경로 지정
}


tasks.named('test') {
    useJUnitPlatform()
}
